---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-k8s-sa
  namespace: default
  annotations:
    iam.gke.io/gcp-service-account: my-service-name@gen-lang-client-0618662481.iam.gserviceaccount.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service_name
  labels:
    app: service_name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service_name
  template:
    metadata:
      labels:
        app: service_name
    spec:
      serviceAccountName: my-k8s-sa
      volumes:
        - name: workspace-volume
          emptyDir: {}
      initContainers:
        - name: copy-gcs-resources
          image: google/cloud-sdk:latest
          command: ['/bin/sh', '-c']
          args:
            - |
              mkdir -p /workspace &&
              gcloud storage cp -r "gs://cloud-user-codes/user-code/service_name/*" /workspace/
          volumeMounts:
            - name: workspace-volume
              mountPath: /workspace
          resources:
            requests:
              cpu: '100m'
              memory: '128Mi'
            limits:
              cpu: '500m'
              memory: '512Mi'
      containers:
        - name: runner
          image: ajayv10/websocket-backend:latest
          ports:
            - containerPort: 3001
          volumeMounts:
            - name: workspace-volume
              mountPath: /workspace
          env:
            - name: GCP_PROJECT_ID
              value: 'gen-lang-client-0618662481'
            - name: GCS_BUCKET
              value: 'cloud-user-codes'
          resources:
            requests:
              cpu: '200m'
              memory: '256Mi'
            limits:
              cpu: '1000m'
              memory: '1024Mi'
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 3001
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: service_name
spec:
  selector:
    app: service_name
  ports:
    - protocol: TCP
      name: ws
      port: 3001
      targetPort: 3001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: service_name
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/enable-websocket: 'true'
spec:
  ingressClassName: nginx
  rules:
    - host: service_name.cloudide.site
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service_name
                port:
                  number: 3001
